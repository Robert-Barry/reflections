*******************************************************************************

What happens when you initialize a repository? Why do you need to do it?

When a repository is initialized, it creates a repository for all the files
in the folder. You do this so that you can begin to create commits on those
files and start keeping track of all the versions.



*******************************************************************************

How is the staging area different from the working directory and the repository? 
What value do you think it offers?

The staging area is for commits that haven't happened yet, where the working
directory is for the actual files, and the repository is a place to store all
of the commits. The staging are is valuable in case you change your mind in 
making a commit and decide to not do so. It also works as a check to make sure
you are commiting all of the files you want to commit, and not commiting files
you do not want to.



*******************************************************************************

How can you use the staging area to make sure you have one commit per logical 
change?

By checking git diff and git diff --staged, you can assure that the changes 
you are making are only one logical change by comparing the new commit to the
previous commit.



*******************************************************************************

What are some situations when branches would be helpful in keeping your history 
organized? How would branches help?

Branches will help any time one might want to make a change in the code that
will change the more basic functioning of the code without disrupting the 
original code itself. What this means is that one could experiment with code,
or add a feature, while still maintaining the code of the original project.
In this way, you could have a "master" working project, with branches 
that represent the changes to the original.




*******************************************************************************

How do the diagrams help you visualize the branch structure?

Diagrams show the tree structure of a repository. It starts at the initial
commit, then can branch out to different commits, or different branches, much
like the structure of a tree. In fact, it is EXACTLY like the structure of a
tree, hence the name "branch".